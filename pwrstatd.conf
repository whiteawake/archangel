#PowerPanel UPS management configuration

#Program must be restarted for changes to take effect: systemctl restart pwrstatd.service | /etc/powerpanel/init.d/pwrstatd restart

#Power failure event conditions

#Time delay between power failure event and script initiation (0-3600 seconds, default 60)
powerfail-delay = 0

#Whether to run the associated script in the event of a power failure (yes or no, default yes)
powerfail-active = yes

#Assign a custom path for power failure event script (default is /etc/powerpanel/pwrstatd-powerfail.sh)
powerfail-cmd-path = /etc/powerpanel/pwrstatd-powerfail.sh

#How many seconds to allow the script to run for, if the script concludes earlier than the defined limit there is no excess (0-3600 seconds, default 0)
powerfail-duration = 30

#Allow the daemon to shut down the system under a power failure event condition, once the script has concluded or time limit reached (yes or no, default yes)
powerfail-shutdown = no

#Low battery event conditions

#Battery capacity threshold: if the capacity is equal to or lower than this value, a low battery event will identify (0-90 percent, default 35)
lowbatt-threshold = 35

#Runtime remaining threshold: if the temporal remaining runtime is equal to or lower than this value, a low battery event will identify (0-3600 seconds, default 300)
#If this condition is met and is less than the value set under 'shutdown-sustain', the 'shutdown-sustain' function will be ignored (i.e. if the UPS only has 5 minutes of battery power remaining, if a 'shutdown-sustain' value is set for 10 minutes, it is invalidated and ignored)
runtime-threshold = 540

#Whether to run the associated script in the event of a low battery (yes or no, default yes)
lowbatt-active = yes

#Assign a custom path for low battery event script (default is /etc/powerpanel/pwrstatd-lowbatt.sh)
lowbatt-cmd-path = /etc/powerpanel/pwrstatd-lowbatt.sh

#How many seconds to allow the script to run for, if the script concludes earlier than the defined limit there is no excess (0-60 seconds, default 0)
lowbatt-duration = 60

#Allow the daemon to shut down the system under a low battery event condition, once the script has concluded or time limit reached (yes or no, default yes)
lowbatt-shutdown = yes

#Toggle the UPS alarm functionality (yes or no, default yes)
enable-alarm = yes

#The 'shutdown-sustain' value specifies the total amount of time permitted before the UPS will cease power output. A timer is ostensibly set and initiated at the conclusion of the script and the UPS power will cease upon its conclusion. The 'runtime-threshold' supercedes this function and its value. (0-3600 seconds, default 600)
shutdown-sustain = 180

#Allow the daemon to inform the UPS to cut all power once appropriate conditions are met (yes or no, default yes)
turn-ups-off = yes

#Polling rate of the UPS (every 1-60 seconds, default 3)
ups-polling-rate = 3

#Reattempt period to find an available UPS (1-300 seconds, default 10)
ups-retry-rate = 10

#Prohibit the daemon to provide a communication mechanism with the client, such as the 'pwrstat' command. This is a security setting. (yes or no, default no)
prohibit-client-access = no

#The progarm accepts four types of device node which includes 'ttyS', 'ttyUSB', 'hiddev', and 'libusb' for communication with the UPS. The program defaults to enumerate all acceptable device nodes and select an available node automatically, however this may cause disturbance to a node occupied by other software. Therefore, one can restrict this by modifying the 'allowed-device-nodes' value and separating nodes by colon (i.e. /dev/ttyS1;/dev/ttyS2;/dev/hiddev1)
allowed-device-nodes = 

#Specify whether or not to allow the daemon to hibernate the system instead of a shutdown when an event occurs (yes or no, default no)
hibernate = no

#Enable CyberPower cloud functionality (yes or no, default no)
cloud-active = no

#Cloud credentials
cloud-account =
